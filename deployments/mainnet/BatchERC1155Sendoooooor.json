{
  "address": "0xff5D282e42E4F133d28899fF10DF50ea1904a545",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "sendWithSameId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendWithSameIdAndAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0b9173111fa973ce300a201f93a5c14af9aba88d1fe1bbacea71814870a154d3",
  "receipt": {
    "to": null,
    "from": "0x5b8C253517b6Bd003369173109693B01cb6841B5",
    "contractAddress": "0xff5D282e42E4F133d28899fF10DF50ea1904a545",
    "transactionIndex": 183,
    "gasUsed": "379559",
    "logsBloom": "0x
    "blockHash": "0x67b206285fc7993c36643a0111ae2efc7276ceba0a12580911db066b19a69a77",
    "transactionHash": "0x0b9173111fa973ce300a201f93a5c14af9aba88d1fe1bbacea71814870a154d3",
    "logs": [],
    "blockNumber": 13705224,
    "cumulativeGasUsed": "17879167",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "53f70d299df285d9ea77fee34ae162fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"sendWithSameId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendWithSameIdAndAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BatchERC1155Sendoooooor.sol\":\"BatchERC1155Sendoooooor\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/BatchERC1155Sendoooooor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\ncontract BatchERC1155Sendoooooor {\\n    function send(\\n        address token,\\n        address[] calldata recipients,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts\\n    ) external {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            IERC1155(token).safeTransferFrom(msg.sender, recipients[i], ids[i], amounts[i], \\\"0x\\\");\\n        }\\n    }\\n\\n    function sendWithSameId(\\n        address token,\\n        address[] calldata recipients,\\n        uint256 id,\\n        uint256[] calldata amounts\\n    ) external {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            IERC1155(token).safeTransferFrom(msg.sender, recipients[i], id, amounts[i], \\\"0x\\\");\\n        }\\n    }\\n\\n    function sendWithSameIdAndAmount(\\n        address token,\\n        address[] calldata recipients,\\n        uint256 id,\\n        uint256 amount\\n    ) external {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            IERC1155(token).safeTransferFrom(msg.sender, recipients[i], id, amount, \\\"0x\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6b6f1f0c793b5d5de30e33f72179d0ca3c6b239ee20ff13a52d43d052baa3670\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309ded849146100465780631ea593671461005b5780632a92e2501461006e575b600080fd5b61005961005436600461045e565b610081565b005b6100596100693660046104e5565b610166565b61005961007c3660046103b7565b610224565b60005b8481101561015d57866001600160a01b031663f242432a338888858181106100bc57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100d19190610396565b878787878181106100f257634e487b7160e01b600052603260045260246000fd5b905060200201356040518563ffffffff1660e01b81526004016101189493929190610548565b600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b5050505080806101559061058b565b915050610084565b50505050505050565b60005b8381101561021c57856001600160a01b031663f242432a338787858181106101a157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906101b69190610396565b86866040518563ffffffff1660e01b81526004016101d79493929190610548565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b5050505080806102149061058b565b915050610169565b505050505050565b60005b8581101561032657876001600160a01b031663f242432a3389898581811061025f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906102749190610396565b88888681811061029457634e487b7160e01b600052603260045260246000fd5b905060200201358787878181106102bb57634e487b7160e01b600052603260045260246000fd5b905060200201356040518563ffffffff1660e01b81526004016102e19493929190610548565b600060405180830381600087803b1580156102fb57600080fd5b505af115801561030f573d6000803e3d6000fd5b50505050808061031e9061058b565b915050610227565b5050505050505050565b80356001600160a01b038116811461034757600080fd5b919050565b60008083601f84011261035d578182fd5b50813567ffffffffffffffff811115610374578182fd5b6020830191508360208260051b850101111561038f57600080fd5b9250929050565b6000602082840312156103a7578081fd5b6103b082610330565b9392505050565b60008060008060008060006080888a0312156103d1578283fd5b6103da88610330565b9650602088013567ffffffffffffffff808211156103f6578485fd5b6104028b838c0161034c565b909850965060408a013591508082111561041a578485fd5b6104268b838c0161034c565b909650945060608a013591508082111561043e578384fd5b5061044b8a828b0161034c565b989b979a50959850939692959293505050565b60008060008060008060808789031215610476578182fd5b61047f87610330565b9550602087013567ffffffffffffffff8082111561049b578384fd5b6104a78a838b0161034c565b90975095506040890135945060608901359150808211156104c6578384fd5b506104d389828a0161034c565b979a9699509497509295939492505050565b6000806000806000608086880312156104fc578081fd5b61050586610330565b9450602086013567ffffffffffffffff811115610520578182fd5b61052c8882890161034c565b9699909850959660408101359660609091013595509350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260029082015261060f60f31b60c082015260e00190565b60006000198214156105ab57634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212203fd78077cbbb41d67f94d837f91904823bd4e0877c008007acdcaf04d4456c9b64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806309ded849146100465780631ea593671461005b5780632a92e2501461006e575b600080fd5b61005961005436600461045e565b610081565b005b6100596100693660046104e5565b610166565b61005961007c3660046103b7565b610224565b60005b8481101561015d57866001600160a01b031663f242432a338888858181106100bc57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100d19190610396565b878787878181106100f257634e487b7160e01b600052603260045260246000fd5b905060200201356040518563ffffffff1660e01b81526004016101189493929190610548565b600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b5050505080806101559061058b565b915050610084565b50505050505050565b60005b8381101561021c57856001600160a01b031663f242432a338787858181106101a157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906101b69190610396565b86866040518563ffffffff1660e01b81526004016101d79493929190610548565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b5050505080806102149061058b565b915050610169565b505050505050565b60005b8581101561032657876001600160a01b031663f242432a3389898581811061025f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906102749190610396565b88888681811061029457634e487b7160e01b600052603260045260246000fd5b905060200201358787878181106102bb57634e487b7160e01b600052603260045260246000fd5b905060200201356040518563ffffffff1660e01b81526004016102e19493929190610548565b600060405180830381600087803b1580156102fb57600080fd5b505af115801561030f573d6000803e3d6000fd5b50505050808061031e9061058b565b915050610227565b5050505050505050565b80356001600160a01b038116811461034757600080fd5b919050565b60008083601f84011261035d578182fd5b50813567ffffffffffffffff811115610374578182fd5b6020830191508360208260051b850101111561038f57600080fd5b9250929050565b6000602082840312156103a7578081fd5b6103b082610330565b9392505050565b60008060008060008060006080888a0312156103d1578283fd5b6103da88610330565b9650602088013567ffffffffffffffff808211156103f6578485fd5b6104028b838c0161034c565b909850965060408a013591508082111561041a578485fd5b6104268b838c0161034c565b909650945060608a013591508082111561043e578384fd5b5061044b8a828b0161034c565b989b979a50959850939692959293505050565b60008060008060008060808789031215610476578182fd5b61047f87610330565b9550602087013567ffffffffffffffff8082111561049b578384fd5b6104a78a838b0161034c565b90975095506040890135945060608901359150808211156104c6578384fd5b506104d389828a0161034c565b979a9699509497509295939492505050565b6000806000806000608086880312156104fc578081fd5b61050586610330565b9450602086013567ffffffffffffffff811115610520578182fd5b61052c8882890161034c565b9699909850959660408101359660609091013595509350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260029082015261060f60f31b60c082015260e00190565b60006000198214156105ab57634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212203fd78077cbbb41d67f94d837f91904823bd4e0877c008007acdcaf04d4456c9b64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}